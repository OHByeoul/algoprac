class Solution {
    public boolean dfs(char[][] board,String word,int i,int j,int index){
        if(index == word.length()){
            return true;
        }
        if(i<0 || i>=board.length || j<0 || j>=board[0].length || word.charAt(index) != board[i][j]){
            return false;
        }
        
        
        char tmp = board[i][j];
        board[i][j] = ' ';
        boolean check = dfs(board,word,i-1,j,index+1) ||
            dfs(board,word,i+1,j,index+1) ||
            dfs(board,word,i,j-1,index+1) ||
            dfs(board,word,i,j+1,index+1);
        board[i][j] = tmp;
        return check;
    }
    
    public boolean exist(char[][] board, String word) {
        for (int i = 0; i<board.length; i++){
            for(int j = 0; j<board[0].length; j++){
                if(word.charAt(0) == board[i][j] && dfs(board,word,i,j,0)){
                    return true;
                }
            }
        }
        return false;
    }
}