/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int sum = 0;
    public int sumOfLeftLeaves(TreeNode root) {
        if(root == null) return 0;
        recursion(root,"");
        return sum;
    }
    
    public void recursion(TreeNode root,String gbn){
        if(root == null) return;
        if(root.left == null && root.right == null && gbn.equals("l")){
            sum += root.val;
        }
        if(root.left != null){
            recursion(root.left,"l" );
        }
        if(root.right != null){
            recursion(root.right,"r");
        }
    }
}
//// fix

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int sum = 0;
    public int sumOfLeftLeaves(TreeNode root) {
        if(root == null) return 0;
        recursion(root);
        return sum;
    }
    
    public boolean recursion(TreeNode root){
        if(root.left != null){
            boolean res = recursion(root.left);
            if(res) sum+= root.left.val;
        }
        if(root.right != null){
            recursion(root.right);
        }
        return root.left==null && root.right==null;
    }
}

