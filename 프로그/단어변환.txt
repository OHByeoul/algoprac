def solution(begin, target, words):
    
    if target not in words:
        return 0
    
    answer = bfs(begin, target, words)
    return answer



def bfs(b,t,words):
    visit = []
    q = [b]
    ans = 0
    while q:
        poped = q.pop()
        if poped == t:
            return ans
        
        for word in words:
            if len([i for i in range(len(word)) if word[i] != poped[i]]) == 1:
                if word not in visit:
                    visit.append(word)
                    q.append(word)
        ans += 1
    return ans